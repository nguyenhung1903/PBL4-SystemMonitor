package com.example;

import java.io.*;
import java.net.Socket;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.file.Files;
import java.nio.file.Paths;

public class ClientHandle extends Thread{
    public final Socket clientSocket;

    private String outputFolder = "output/";

    public ClientHandle(Socket socket){
        this.clientSocket = socket;
        outputFolder += socket.getInetAddress().getHostName() + "/";
        outputFolder = System.getProperty("user.dir") + "/" + outputFolder;
    }

    private String receiveFile(DataInputStream dataInputStream) throws Exception
    {
        Files.createDirectories(Paths.get(outputFolder));
        int bytes = 0;
        String filename = dataInputStream.readUTF(); // read file name
        String outputFile = outputFolder + "/" + System.currentTimeMillis() + "_" + filename;
        System.out.println("Receiving file: " + outputFile);
        FileOutputStream fileOutputStream = new FileOutputStream(outputFile);
        long size = dataInputStream.readLong();     // read file size
        byte[] buffer = new byte[4 * 1024];
        while (size > 0 && (bytes = dataInputStream.read(buffer)) != -1) {
            // Here we write the file using write method
            fileOutputStream.write(buffer, 0, bytes);
            size -= bytes;      // read upto file size
        }
        // Here we received file
        fileOutputStream.close();

        return outputFile;
    }

    private String ScanAV(String processPath){
        try {
            Process process = Runtime.getRuntime().exec("C:\\ClamAV\\clamdscan.exe " + processPath);
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line = reader.readLine();
            return line.split(" ")[1].trim();
        } catch (Exception e) {
            e.printStackTrace();
            return "OK";
        }
    }

    @Override
    public void run(){
        try {
            DataInputStream dis = new DataInputStream(this.clientSocket.getInputStream());
            DataOutputStream oos = new DataOutputStream(this.clientSocket.getOutputStream());
            while (!this.clientSocket.isClosed()){
                String processPath = receiveFile(dis);
                System.out.println("Scanning " + processPath);
                String result = ScanAV(processPath);
                System.out.println("Result: " + processPath + ": " + result);
                oos.writeUTF(result);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (this.clientSocket != null){
                try {
                    clientSocket.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }
}